{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azmat\\\\OneDrive\\\\Desktop\\\\React\\\\Authetication App\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../Store/Auth-context';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const history = useHistory();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setLoading(true);\n    let url;\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPNIp9dSCeeKozL2CoO9s-UadD2t2Cp5w\";\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPNIp9dSCeeKozL2CoO9s-UadD2t2Cp5w\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      setLoading(false);\n      if (response.ok) {\n        return response.json();\n      } else {\n        return response.json().then(data => {\n          let errorMessage = \"Authentication Failed! \";\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      authCtx.login(data.idToken); // set the token for login\n      history.replace('/');\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 24\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"hlbiW6B+qbVAdnYmSuhAyQuMjic=\", false, function () {\n  return [useHistory];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","useContext","useHistory","AuthContext","classes","AuthForm","history","isLogin","setIsLogin","isLoading","setLoading","authCtx","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","response","ok","json","data","errorMessage","error","message","Error","login","idToken","replace","catch","err","alert","auth","control","actions","toggle"],"sources":["C:/Users/azmat/OneDrive/Desktop/React/Authetication App/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState,useRef ,useContext} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../Store/Auth-context';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setLoading]=useState(false)\n  const authCtx = useContext(AuthContext);\n    const emailInputRef= useRef();\n    const passwordInputRef=useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event)=>{\n    event.preventDefault()\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    \n    setLoading(true);\n    let url;\n    if(isLogin){\n      url =\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPNIp9dSCeeKozL2CoO9s-UadD2t2Cp5w\";\n    }\n    else{\n      url =\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPNIp9dSCeeKozL2CoO9s-UadD2t2Cp5w\";\n     \n    }\n   fetch(\n        url,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      ).then((response) => {\n        setLoading(false)\n        if (response.ok) {\n          return response.json();\n        } else {\n          return response.json().then((data) => {\n            let errorMessage = \"Authentication Failed! \";\n\n            if (data && data.error && data.error.message){\n              errorMessage = data.error.message\n            }\n            throw new Error(errorMessage)\n           \n          });\n        }\n      }).then(data=>{\n         authCtx.login(data.idToken); // set the token for login\n         history.replace('/')\n      })\n        .catch(err=>{\n           alert(err.message);\n         });\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading&&<button>{isLogin ? \"Login\" : \"Create Account\"}</button>}\n          {isLoading && <p>Sending request..</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,MAAM,EAAEC,UAAU,QAAO,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,OAAO,MAAM,uBAAuB;AAAC;AAE5C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,OAAO,GAAGJ,UAAU,EAAE;EAC5B,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,SAAS,EAAEC,UAAU,CAAC,GAACX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMY,OAAO,GAAGV,UAAU,CAACE,WAAW,CAAC;EACrC,MAAMS,aAAa,GAAEZ,MAAM,EAAE;EAC7B,MAAMa,gBAAgB,GAACb,MAAM,EAAE;EAEjC,MAAMc,qBAAqB,GAAG,MAAM;IAClCN,UAAU,CAAEO,SAAS,IAAK,CAACA,SAAS,CAAC;EACvC,CAAC;EAED,MAAMC,aAAa,GAAIC,KAAK,IAAG;IAC7BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,YAAY,GAAGP,aAAa,CAACQ,OAAO,CAACC,KAAK;IAChD,MAAMC,eAAe,GAAGT,gBAAgB,CAACO,OAAO,CAACC,KAAK;IAEtDX,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIa,GAAG;IACP,IAAGhB,OAAO,EAAC;MACTgB,GAAG,GAAE,mHAAmH;IAC1H,CAAC,MACG;MACFA,GAAG,GAAE,uGAAuG;IAE9G;IACDC,KAAK,CACAD,GAAG,EACH;MACEE,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAEV,YAAY;QACnBW,QAAQ,EAAER,eAAe;QACzBS,iBAAiB,EAAE;MACrB,CAAC,CAAC;MACFC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CACF,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACnBxB,UAAU,CAAC,KAAK,CAAC;MACjB,IAAIwB,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB,CAAC,MAAM;QACL,OAAOF,QAAQ,CAACE,IAAI,EAAE,CAACH,IAAI,CAAEI,IAAI,IAAK;UACpC,IAAIC,YAAY,GAAG,yBAAyB;UAE5C,IAAID,IAAI,IAAIA,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACE,KAAK,CAACC,OAAO,EAAC;YAC3CF,YAAY,GAAGD,IAAI,CAACE,KAAK,CAACC,OAAO;UACnC;UACA,MAAM,IAAIC,KAAK,CAACH,YAAY,CAAC;QAE/B,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CAACL,IAAI,CAACI,IAAI,IAAE;MACX1B,OAAO,CAAC+B,KAAK,CAACL,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC;MAC7BrC,OAAO,CAACsC,OAAO,CAAC,GAAG,CAAC;IACvB,CAAC,CAAC,CACCC,KAAK,CAACC,GAAG,IAAE;MACTC,KAAK,CAACD,GAAG,CAACN,OAAO,CAAC;IACpB,CAAC,CAAC;EACT,CAAC;EAED,oBACE;IAAS,SAAS,EAAEpC,OAAO,CAAC4C,IAAK;IAAA,wBAC/B;MAAA,UAAKzC,OAAO,GAAG,OAAO,GAAG;IAAS;MAAA;MAAA;MAAA;IAAA,QAAM,eACxC;MAAM,QAAQ,EAAES,aAAc;MAAA,wBAC5B;QAAK,SAAS,EAAEZ,OAAO,CAAC6C,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,OAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eACzC;UAAO,IAAI,EAAC,OAAO;UAAC,EAAE,EAAC,OAAO;UAAC,QAAQ;UAAC,GAAG,EAAErC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D,eACN;QAAK,SAAS,EAAER,OAAO,CAAC6C,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eAC/C;UACE,IAAI,EAAC,UAAU;UACf,EAAE,EAAC,UAAU;UACb,QAAQ;UACR,GAAG,EAAEpC;QAAiB;UAAA;UAAA;UAAA;QAAA,QACtB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAET,OAAO,CAAC8C,OAAQ;QAAA,WAC7B,CAACzC,SAAS,iBAAE;UAAA,UAASF,OAAO,GAAG,OAAO,GAAG;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAU,EACnEE,SAAS,iBAAI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB,eACtC;UACE,IAAI,EAAC,QAAQ;UACb,SAAS,EAAEL,OAAO,CAAC+C,MAAO;UAC1B,OAAO,EAAErC,qBAAsB;UAAA,UAE9BP,OAAO,GAAG,oBAAoB,GAAG;QAA6B;UAAA;UAAA;UAAA;QAAA,QACxD;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GA9FIF,QAAQ;EAAA,QACIH,UAAU;AAAA;AAAA,KADtBG,QAAQ;AAgGd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}