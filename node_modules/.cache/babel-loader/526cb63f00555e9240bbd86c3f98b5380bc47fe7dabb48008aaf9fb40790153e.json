{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azmat\\\\OneDrive\\\\Desktop\\\\React\\\\Authetication App\\\\src\\\\components\\\\Store\\\\Auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLogIn: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n  const [token, setToken] = useState(null);\n  const userIsLoggedIn = !!token; // to convert it in boolean value it toggle as true & false \n  const loginHandler = token => {\n    setToken(token);\n  };\n  const logoutHandler = () => {\n    setToken(null); // to clear the token after logout\n  };\n\n  const contextValue = {\n    token: token,\n    isLogIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_s(AuthContextProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","token","isLogIn","login","logout","AuthContextProvider","props","setToken","userIsLoggedIn","loginHandler","logoutHandler","contextValue","children"],"sources":["C:/Users/azmat/OneDrive/Desktop/React/Authetication App/src/components/Store/Auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nconst AuthContext = React.createContext({\r\n  token : '',\r\n  isLogIn : false,\r\n  login : (token)=>{},\r\n  logout : ()=>{}\r\n})\r\n\r\n export const AuthContextProvider= (props)=>{\r\n    const [token, setToken]= useState(null)\r\n\r\n    const userIsLoggedIn = !!token // to convert it in boolean value it toggle as true & false \r\n    const loginHandler = (token)=>{\r\n       setToken(token)\r\n    }\r\n\r\n    const logoutHandler =()=>{\r\n        setToken(null) // to clear the token after logout\r\n    }\r\n    \r\n    const contextValue = {\r\n      token: token,\r\n      isLogIn: userIsLoggedIn,\r\n      login: loginHandler,\r\n      logout: logoutHandler,\r\n    };\r\n    return (\r\n      <AuthContext.Provider value={contextValue}>\r\n        {props.children}\r\n      </AuthContext.Provider>\r\n    );\r\n      \r\n   \r\n}\r\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AACxC,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAa,CAAC;EACtCC,KAAK,EAAG,EAAE;EACVC,OAAO,EAAG,KAAK;EACfC,KAAK,EAAIF,KAAK,IAAG,CAAC,CAAC;EACnBG,MAAM,EAAG,MAAI,CAAC;AAChB,CAAC,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGC,KAAK,IAAG;EAAA;EACxC,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAET,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMU,cAAc,GAAG,CAAC,CAACP,KAAK,EAAC;EAC/B,MAAMQ,YAAY,GAAIR,KAAK,IAAG;IAC3BM,QAAQ,CAACN,KAAK,CAAC;EAClB,CAAC;EAED,MAAMS,aAAa,GAAE,MAAI;IACrBH,QAAQ,CAAC,IAAI,CAAC,EAAC;EACnB,CAAC;;EAED,MAAMI,YAAY,GAAG;IACnBV,KAAK,EAAEA,KAAK;IACZC,OAAO,EAAEM,cAAc;IACvBL,KAAK,EAAEM,YAAY;IACnBL,MAAM,EAAEM;EACV,CAAC;EACD,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,YAAa;IAAA,UACvCL,KAAK,CAACM;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAI7B,CAAC;AAAA,GAzBaP,mBAAmB;AAAA,KAAnBA,mBAAmB;AA0BjC,eAAeN,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}